name: Laravel CI/CD

on:
  push:
    branches:
      - develop
      - staging
      - production
  pull_request:
    branches:
      - develop
      - staging
      - production

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'  # Update this if needed
      - name: Update Dependencies
        run: composer update -q --no-ansi --no-interaction --no-progress --prefer-dist
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-progress --prefer-dist
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan migrate
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan test

  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  # Adjust as needed
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
      - name: Update Dependencies
        run: composer update -q --no-ansi --no-interaction --no-progress --prefer-dist
      - name: Deploy to Staging
        env:
          DEPLOY_HOST: ${{ secrets.STAGING_DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.STAGING_DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.STAGING_DEPLOY_PATH }}
          DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          DB_DATABASE: ${{ secrets.STAGING_DB_DATABASE }}
          DB_USERNAME: ${{ secrets.STAGING_DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
            echo "Printing all environment variables:"
            printenv

            echo "DEPLOY_PATH is: $DEPLOY_PATH"
            echo "Attempting to change to deploy path: $DEPLOY_PATH"
            if [ -d "$DEPLOY_PATH" ]; then
              echo "Directory exists: $DEPLOY_PATH"
              cd "$DEPLOY_PATH"
              echo "Changed to directory: $(pwd)"
              echo "Listing directory contents:"
              ls -al
              if [ -d ".git" ]; then
                git pull origin staging || { echo "Git pull failed"; exit 1; }
                echo "Updating Composer dependencies:"
                composer update || { echo "Composer update failed"; exit 1; }
                composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader || { echo "Composer install failed"; exit 1; }
                php artisan migrate --force || { echo "Migration failed"; exit 1; }
                php artisan db:seed --class=LanguageSettingsTableSeeder || echo 'Seeding failed'
                php artisan cache:clear || { echo "Cache clear failed"; exit 1; }
                php artisan config:clear || { echo "Config clear failed"; exit 1; }
                php artisan config:cache || { echo "Config cache failed"; exit 1; }
                php artisan route:cache || { echo "Route cache failed"; exit 1; }
                php artisan view:cache || { echo "View cache failed"; exit 1; }
                chown -R www-data:www-data storage || { echo "Chown storage failed"; exit 1; }
                chown -R www-data:www-data bootstrap/cache || { echo "Chown bootstrap/cache failed"; exit 1; }
              else
                echo "Error: Not a git repository."
                exit 1
              fi
            else
              echo "Error: Directory does not exist: $DEPLOY_PATH"
              exit 1
            fi
          EOF

  deploy-production:
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  # Adjust as needed
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Update Dependencies
        run: composer update -q --no-ansi --no-interaction --no-progress --prefer-dist
      - name: Deploy to Production
        env:
          DEPLOY_HOST: ${{ secrets.PRODUCTION_DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.PRODUCTION_DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.PRODUCTION_DEPLOY_PATH }}
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: tovilProduction
          DB_USERNAME: "root"
          DB_PASSWORD: "TovilOnline@2024#"
        run: |
          ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
            echo "Printing all environment variables:"
            printenv

            echo "DEPLOY_PATH is: $DEPLOY_PATH"
            echo "Attempting to change to deploy path: $DEPLOY_PATH"
            if [ -d "/var/www/tovil/tovili_trucking" ]; then
              echo "Directory exists: $DEPLOY_PATH"
              cd "/var/www/tovil/tovili_trucking"
              echo "Changed to directory: $(pwd)"
              echo "Listing directory contents:"
              ls -al
              if [ -d ".git" ]; then
                git pull origin production || { echo "Git pull failed"; exit 1; }
                echo "Updating Composer dependencies:"
                composer update || { echo "Composer update failed"; exit 1; }
                composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader || { echo "Composer install failed"; exit 1; }
                php artisan migrate --force || { echo "Migration failed"; exit 1; }
                php artisan db:seed --class=LanguageSettingsTableSeeder || echo 'Seeding failed'
                php artisan cache:clear || { echo "Cache clear failed"; exit 1; }
                php artisan config:clear || { echo "Config clear failed"; exit 1; }
                php artisan config:cache || { echo "Config cache failed"; exit 1; }
                php artisan route:cache || { echo "Route cache failed"; exit 1; }
                php artisan view:cache || { echo "View cache failed"; exit 1; }
                chown -R www-data:www-data storage || { echo "Chown storage failed"; exit 1; }
                chown -R www-data:www-data bootstrap/cache || { echo "Chown bootstrap/cache failed"; exit 1; }
              else
                echo "Error: Not a git repository."
                exit 1
              fi
            else
              echo "Error: Directory does not exist: $DEPLOY_PATH"
              exit 1
            fi
          EOF
